houses[10] <- replace(as.character(houses$Property.Condition), houses$Property.Condition == "Excellent", "5")
rm(ls{})
rm(ls[])
help(rm)
rm(list=ls())
houses
library(xlsx)
library(xlsx)
help(install.packages)
install.packages(rms)
install.packages("rms")
install.packages("rms",dependencies = TRUE)
library(rms)
houses <- read.xlsx("/Users/gkredila/Downloads/Houses.xlsx")
houses <- read.xlsx("/Users/gkredila/Downloads/Houses.xlsx", 1)
houses
View(houses)
View(houses)
install.packages("forecast")
library(forecast)
help(forecast)
install.packages("dplyr")
install.packages("dplyr",dependencies = TRUE)
library(dyplr)
library(dyplyr)
library(dplyr)
install.packages("tidy",dependencies = TRUE)
install.packages("tidy",dependencies = TRUE)
install.packages("tidyr",dependencies = TRUE)
library(dyplyr)
library(dplyr)
library(tidyr)
library(dplyr)
library(dplyr)
library(tidyr)
install.packages("shiny", dependencies = TRUE)
library(shiny)
help(shiny)
install.packages("devtools", dependencies = TRUE)
library(devtools)
help(devtool)
help(devtools)
help(shiny)
help(matrix)
help(dim)
runExample("01_hello")
help(abline)
help(abline)
install.packages("ggplot2", dependencies = TRUE)
install.packages("RPostgreSQL", type = "source")
help("RPostgreSQL")
library(RPostgreSQL)
help(RPostgreSQL)
help("RPostgreSQL")
library(RPostgreSQL)
help(dbDriver)
install.packages("RSQLite", dependencies = TRUE)
library(RPostgreSQL)
library(RSQLite)
library(RSQLite)
install.packages("shiny", dependencies = TRUE)
library(shiny)
library(shiny)
View(houses)
rm(houses)
houses <- read.csv("/Users/gkredila/Desktop/RESEARCH/Houses.csv", header = TRUE)
View(houses)
View(houses)
head(houses)
View(houses)
View(houses)
library(rpostgresql)
library(RPostgreSQL)
library(rsqlite)
library(RSQLite)
library(RSQLite)
library(shiny)
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, dbname = "houses")
rs <- dbSendQuery(con, "select * from citynames")
rs <- dbSendQuery(con, "select * from table citynames")
rs <- dbSendQuery(con, "select * from citynums")
fetch(rs, n = -1)
dbGetQuery(con, "select * from citynums")
dbGetQuery(con, "select * from generalinput")
dbGetQuery(con, "select * from housedetails")
rm(houses)
citynums <- rs
rm(rs_)
rm(rs)
housedetails <- sendQuery(con, "select * from housedetails")
housedetails <- dbSendQuery(con, "select * from housedetails")
fetch <- (housedetails, n = -1)
fetch <- (housedetails n = -1)
fetch <- (housedetails, n=-1)
fetch(housedetails, n = -1)
generalinput <- dbSendQuery(con, "select * from generalinput")
head(housedetails)
fetch(housedetails, n=-1)
fetch(housedetails, n = -1)
housedetails
rm(housdetails)
rm(housedetails)
rm(citynums)
rm(generalinput)
housedetails <- dbSendQuery(con, "select * from housedetails")
housedetails <- dbSendQuery(con, "select * from housedetails")
housedetails <- dbSendQuery(con, "select * from housedetails")
dbGetInfo(drv)
dbDisconnect(con)
housedetails <- sendQuery(con, "select * from housedetails")
housedetails <- dbSendQuery(con, "select * from housedetails")
dbDisconnect(con)
dbUnloadDriver(drv)
housedetails <- dbSendQuery(con, "select * from housedetails")
rm(con)
rm(drv)
housedetails <- dbSendQuery(con, "select * from housedetails")
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, "houses")
con <- dbConnect(drv, "houses")
con <- dbConnect(drv, "houses")
con <- dbConnect(drv, "postgres")
con <- dbConnect(drv, "postgres")
con <- dbConnect(drv, "houses")
library(RSQLite)
library(RPostgreSQL)
library(shiny)
con <- dbConnect(drv, dbname = "houses")
rm(drv)
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, dbname = "houses")
dbListTables(con)
rs <- dbSendQuery(con, "select * from housedetails")
housedetails <- rs
housedetails
fetch(housedetails, n=-1)
rm(rs)
rm(housedetails)
housedetails <- dbReadTable(con, "housedetails")
citynums <- dbReadTable(con, "citynums")
generalinput <- dbReadTable(con, "generalinput")
head(housedetails)
install.packages("rworldmap", dependencies = TRUE)
library(rworldmap)
vignette('rworldmap')
newmap <- getMap(resolution = "low")
View(housedetails)
View(housedetails)
colnames(housedetails) <- c("houseid", "adrnum", "street", "state", "zip", "latcrd", "longcrd", "bathnum", "bednum", "outview", "numlevel", "yrbuilt", "landsz", "condtn", "housesz", "closedt", "sellprice", "origprice")
View(housedetails)
View(housedetails)
plot(newmap, xlim = c(21,22), ylim = c(-159, -157), asp = 1)
plot(newmap, xlim = c(-159,-157), ylim = c(21,22), asp = 1)
points(housedetails$latcrd, housedetails$longcrd, col = "red", cex = .6)
points(housedetails$longcrd, housedetails$latcrd, col = "red", cex = .6)
points(housedetails$longcrd, housedetails$latcrd, col = "red", cex = 2)
points(housedetails$longcrd, housedetails$latcrd, col = "red", cex = .5)
plot(newmap, xlim = c(-159,-157), ylim = c(21,22), asp = 5)
plot(newmap, xlim = c(-159,-157), ylim = c(21,22), asp = 1)
plot(newmap, xlim = c(-158.02,-157.99), ylim = c(21.46,21.5), asp = 1)
points(housedetails$longcrd, housedetails$latcrd, col = "red", cex = .5)
install.packages("ggmap", dependencies = TRUE)
map <- get_map(location = 'Mililani,Hawaii', zoom = 4)
library(ggmap)
library(ggplot2)
map <- get_map(location = 'Mililani,Hawaii', zoom = 4)
plot(newmap, xlim = c(-158.02,-157.99), ylim = c(21.46,21.5), asp = 1)
plot(newmap, xlim = c(-158.5,-157.8), ylim = c(21.4,21.6), asp = 1)
plot(newmap, xlim = c(-158.5,-157.7), ylim = c(21.4,21.6), asp = 1)
plot(newmap, xlim = c(-158.3,-157.7), ylim = c(21.4,21.6), asp = 1)
points(housedetails$longcrd, housedetails$latcrd, col = "red", cex = .5)
map
library(plyr)
houses <- ddply(housedetails, .(adrnum) "nrow")
houses <- ddply(housedetails, .(adrnum))
fit <- lm(y ~ "origprice", data =housedetails)
plot(housedetails$origprice, housedetails$sellprice)
line <- lm(housedetails$origprice ~ housedetails$sellprice)
abline(line)
plot(housedetails$yrbuilt, housedetails$origprice)
plot(housedetails$origprice, housedetails$yrbuilt)
plot(housedetails$landsz, housedetails$origprice)
landLine <- lm(housedetails$landsz ~ housedetails$origprice)
abline(landLine)
abline(landLine)
install.packages("party", dependencies = TRUE)
library(party)
str(housedetails)
housedetails_ctree <- ctree(origprice ~ numlevel, data=housedetails)
print(housedetails_ctree)
plot(housedetails_ctree)
housedetails_ctree <- ctree(origprice ~ numlevel+bathnum+bednum+yrbuilt+landsz+condtn+housesz, data=housedetails)
print(housedetails_ctree)
plot(housedetails_ctree)
plot(housedetails_ctree, type = "simple")
library(rpart)
housedetails_rpart <- rpart(origprice ~ numlevel + bathnum + bednum + yrbuilt + landsz + condtn + housesz, data = housedetails, method = class)
housedetails_rpart <- rpart(origprice ~ numlevel + bathnum + bednum + yrbuilt + landsz + condtn + housesz, data = housedetails, method = "class")
housedetails_rpart2 <- rpart(origprice ~ numlevel + bathnum + bednum + yrbuilt + landsz + condtn + housesz, data = housedetails, method = "anova")
printcp(housedetails_rpart)
housedetails_rpart <- rpart(origprice ~ numlevel + bathnum + bednum + yrbuilt + landsz + condtn + housesz, data = housedetails, method = "class")
printcp(housedetails_rpart)
housedetails_rpart2 <- rpart(origprice ~ numlevel + bathnum + bednum + yrbuilt + landsz + condtn + housesz, data = housedetails, method = "anova")
printcp(housedetails_rpart2)
print(housedetails_rpart)
plot(housedetails_rpart)
plot(housedetails_rpart2)
text(housedetails_rpart2)
plotcp(housedetails_rpart)
plotcp(housedetails_rpart2)
plot(housedetails_rpart2)
text(housedetails_rpart2)
rsq.rpart(housedetails_rpart2)
text(housedetails_rpart2)
text(housedetails_rpart2)
plot(housedetails_rpart2)
text(housedetails_rpart2)
plot(housedetails_rpart)
text(housedetails_rpart)
rm(housedetails_rpart)
library(rattle)
help(rattle)
summary(housedetails_rpart2)
rm(housedetails_rpart2)
housedetails_rpart <- rpart(origprice ~ numlevel + bathnum + bednum + yrbuilt + landsz + condtn + housesz, data = housedetails, method = "class")
plot(housedetails_rpart)
text(housedetails_rpart)
summary(housedetails_rpart)
plot(housedetails_rpart)
plot(housedetails_rpart)
text(housedetails_rpart)
str <- as.party(model.rpart)
plot(as.party(model.rpart))
help(as.party)
library(party)
help(as.party)
install.packages("partykit")
library(partykit)
plot(as.party(model.rpart))
plot(as.party(housedetails_rpart))
houseprice_predictor <- predict(housedetails_rpart)
View(houseprice_predictor)
View(houseprice_predictor)
newmap
> housedetails_rpart <- rpart(origprice ~ numlevel + bathnum + bednum + yrbuilt + landsz + condtn + housesz, data = housedetails, method = "class")
> plot(housedetails_rpart)
> text(housedetails_rpart)
> summary(housedetails_rpart)
Call:
rpart(formula = origprice ~ numlevel + bathnum + bednum + yrbuilt +
landsz + condtn + housesz, data = housedetails, method = "class")
n= 210
CP nsplit rel error    xerror        xstd
1 0.02475248      0 1.0000000 1.0247525 0.008513042
2 0.01155116      1 0.9752475 0.9752475 0.017287961
3 0.01000000      4 0.9405941 1.0049505 0.012877632
Variable importance
housesz   bednum   landsz  bathnum numlevel  yrbuilt
60       14       11        8        4        4
Node number 1: 210 observations,    complexity param=0.02475248
predicted class=799000  expected loss=0.9619048  P(node) =1
class counts:     1     1     1     1     2     1     1     1     3     2     1     1     3     2     2     3     1     2     2     2     1     2     1     1     1     2     2     2     3     1     3     1     3     2     1     1     2     1     1     2     1     1     3     1     3     1     1     2     1     2     1     1     2     2     1     2     1     1     7     1     1     1     1     2     3     1     1     1     1     1     3     1     1     1     1     8     1     1     1     1     2     1     2     3     1     1     1     1     2     1     1     1     2     2     1     2     1     2     1     1     1     1     1     1     2     1     1     2     2     1     1     1     1     3     1     2     1     1     1     2     1     1     1     1     2     1     1     1     2     2     1     1     1     1     1     1     1     1
probabilities: 0.005 0.005 0.005 0.005 0.010 0.005 0.005 0.005 0.014 0.010 0.005 0.005 0.014 0.010 0.010 0.014 0.005 0.010 0.010 0.010 0.005 0.010 0.005 0.005 0.005 0.010 0.010 0.010 0.014 0.005 0.014 0.005 0.014 0.010 0.005 0.005 0.010 0.005 0.005 0.010 0.005 0.005 0.014 0.005 0.014 0.005 0.005 0.010 0.005 0.010 0.005 0.005 0.010 0.010 0.005 0.010 0.005 0.005 0.033 0.005 0.005 0.005 0.005 0.010 0.014 0.005 0.005 0.005 0.005 0.005 0.014 0.005 0.005 0.005 0.005 0.038 0.005 0.005 0.005 0.005 0.010 0.005 0.010 0.014 0.005 0.005 0.005 0.005 0.010 0.005 0.005 0.005 0.010 0.010 0.005 0.010 0.005 0.010 0.005 0.005 0.005 0.005 0.005 0.005 0.010 0.005 0.005 0.010 0.010 0.005 0.005 0.005 0.005 0.014 0.005 0.010 0.005 0.005 0.005 0.010 0.005 0.005 0.005 0.005 0.010 0.005 0.005 0.005 0.010 0.010 0.005 0.005 0.005 0.005 0.005 0.005 0.005 0.005
left son=2 (104 obs) right son=3 (106 obs)
Primary splits:
housesz < 1827   to the left,  improve=1.915198, (0 missing)
landsz  < 4919   to the left,  improve=1.423028, (0 missing)
bathnum < 2.25   to the left,  improve=1.301451, (0 missing)
bednum  < 3.5    to the left,  improve=1.237912, (0 missing)
yrbuilt < 2004.5 to the left,  improve=1.202381, (0 missing)
Surrogate splits:
landsz   < 4999   to the left,  agree=0.805, adj=0.606, (0 split)
bednum   < 3.5    to the left,  agree=0.733, adj=0.462, (0 split)
bathnum  < 2.75   to the left,  agree=0.714, adj=0.423, (0 split)
numlevel < 1.25   to the left,  agree=0.610, adj=0.212, (0 split)
yrbuilt  < 2004.5 to the left,  agree=0.610, adj=0.212, (0 split)
Node number 2: 104 observations,    complexity param=0.01155116
predicted class=749000  expected loss=0.9519231  P(node) =0.4952381
class counts:     1     1     1     1     2     1     1     1     3     2     1     1     3     2     2     3     1     2     2     1     1     2     1     1     1     2     2     2     3     1     3     1     3     2     1     1     2     1     1     2     1     1     3     1     3     1     1     2     1     2     1     1     2     2     0     2     1     0     5     0     1     1     0     1     3     0     0     0     0     0     0     0     0     1     0     0     0     0     0     0     0     0     2     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0
probabilities: 0.010 0.010 0.010 0.010 0.019 0.010 0.010 0.010 0.029 0.019 0.010 0.010 0.029 0.019 0.019 0.029 0.010 0.019 0.019 0.010 0.010 0.019 0.010 0.010 0.010 0.019 0.019 0.019 0.029 0.010 0.029 0.010 0.029 0.019 0.010 0.010 0.019 0.010 0.010 0.019 0.010 0.010 0.029 0.010 0.029 0.010 0.010 0.019 0.010 0.019 0.010 0.010 0.019 0.019 0.000 0.019 0.010 0.000 0.048 0.000 0.010 0.010 0.000 0.010 0.029 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.010 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.019 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
left son=4 (94 obs) right son=5 (10 obs)
Primary splits:
housesz < 1698.5 to the left,  improve=1.837971, (0 missing)
bednum  < 3.5    to the left,  improve=1.355287, (0 missing)
landsz  < 5604   to the left,  improve=1.286713, (0 missing)
yrbuilt < 2004.5 to the left,  improve=1.272785, (0 missing)
bathnum < 2.25   to the left,  improve=1.191330, (0 missing)
Node number 3: 106 observations
predicted class=799000  expected loss=0.9245283  P(node) =0.5047619
class counts:     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     1     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     1     0     0     1     2     1     0     0     1     1     0     1     1     1     1     1     3     1     1     0     1     8     1     1     1     1     2     1     0     3     1     1     1     1     2     1     1     1     2     2     1     2     1     2     1     1     1     1     1     1     2     1     1     2     2     1     1     1     1     3     1     2     1     1     1     2     1     1     1     1     2     1     1     1     2     2     1     1     1     1     1     1     1     1
probabilities: 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.009 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.009 0.000 0.000 0.009 0.019 0.009 0.000 0.000 0.009 0.009 0.000 0.009 0.009 0.009 0.009 0.009 0.028 0.009 0.009 0.000 0.009 0.075 0.009 0.009 0.009 0.009 0.019 0.009 0.000 0.028 0.009 0.009 0.009 0.009 0.019 0.009 0.009 0.009 0.019 0.019 0.009 0.019 0.009 0.019 0.009 0.009 0.009 0.009 0.009 0.009 0.019 0.009 0.009 0.019 0.019 0.009 0.009 0.009 0.009 0.028 0.009 0.019 0.009 0.009 0.009 0.019 0.009 0.009 0.009 0.009 0.019 0.009 0.009 0.009 0.019 0.019 0.009 0.009 0.009 0.009 0.009 0.009 0.009 0.009
Node number 4: 94 observations,    complexity param=0.01155116
predicted class=749000  expected loss=0.9574468  P(node) =0.447619
class counts:     1     1     1     1     2     1     1     1     3     2     1     1     3     2     2     3     1     2     2     1     1     2     1     1     1     2     2     2     2     1     3     1     3     2     1     1     2     1     1     2     1     1     1     1     3     1     1     2     1     2     1     1     2     2     0     2     1     0     4     0     1     1     0     1     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0
probabilities: 0.011 0.011 0.011 0.011 0.021 0.011 0.011 0.011 0.032 0.021 0.011 0.011 0.032 0.021 0.021 0.032 0.011 0.021 0.021 0.011 0.011 0.021 0.011 0.011 0.011 0.021 0.021 0.021 0.021 0.011 0.032 0.011 0.032 0.021 0.011 0.011 0.021 0.011 0.011 0.021 0.011 0.011 0.011 0.011 0.032 0.011 0.011 0.021 0.011 0.021 0.011 0.011 0.021 0.021 0.000 0.021 0.011 0.000 0.043 0.000 0.011 0.011 0.000 0.011 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
left son=8 (7 obs) right son=9 (87 obs)
Primary splits:
housesz < 966    to the left,  improve=1.553087, (0 missing)
landsz  < 5604   to the left,  improve=1.365594, (0 missing)
yrbuilt < 2000.5 to the left,  improve=1.225106, (0 missing)
condtn  < 3.25   to the left,  improve=1.142249, (0 missing)
bathnum < 2.25   to the left,  improve=1.115758, (0 missing)
Surrogate splits:
bednum < 2.5    to the left,  agree=0.957, adj=0.429, (0 split)
Node number 5: 10 observations
predicted class=765000  expected loss=0.7  P(node) =0.04761905
class counts:     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     1     0     0     0     0     0     0     0     0     0     0     0     0     0     2     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     1     0     0     0     0     0     3     0     0     0     0     0     0     0     0     1     0     0     0     0     0     0     0     0     2     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0
probabilities: 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.100 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.200 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.100 0.000 0.000 0.000 0.000 0.000 0.300 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.100 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.200 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
Node number 8: 7 observations
predicted class=545000  expected loss=0.7142857  P(node) =0.03333333
class counts
probabilities: 0.143 0.143 0.000 0.000 0.286 0.143 0.000 0.000 0.286 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
Node number 9: 87 observations,    complexity param=0.01155116
predicted class=749000  expected loss=0.954023  P(node) =0.4142857
class counts:     0     0     1     1     0     0     1     1     1     2     1     1     3     2     2     3     1     2     2     1     1     2     1     1     1     2     2     2     2     1     3     1     3     2     1     1     2     1     1     2     1     1     1     1     3     1     1     2     1     2     1     1     2     2     0     2     1     0     4     0     1     1     0     1     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0
probabilities: 0.000 0.000 0.011 0.011 0.000 0.000 0.011 0.011 0.011 0.023 0.011 0.011 0.034 0.023 0.023 0.034 0.011 0.023 0.023 0.011 0.011 0.023 0.011 0.011 0.011 0.023 0.023 0.023 0.023 0.011 0.034 0.011 0.034 0.023 0.011 0.011 0.023 0.011 0.011 0.023 0.011 0.011 0.011 0.011 0.034 0.011 0.011 0.023 0.011 0.023 0.011 0.011 0.023 0.023 0.000 0.023 0.011 0.000 0.046 0.000 0.011 0.011 0.000 0.011 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
left son=18 (23 obs) right son=19 (64 obs)
Primary splits:
housesz  < 1333   to the left,  improve=1.375187, (0 missing)
landsz   < 5604   to the left,  improve=1.350115, (0 missing)
yrbuilt  < 2003.5 to the left,  improve=1.214559, (0 missing)
numlevel < 1.25   to the right, improve=1.078680, (0 missing)
bathnum  < 2.25   to the left,  improve=1.033273, (0 missing)
Surrogate splits:
bathnum < 2.25   to the left,  agree=0.759, adj=0.087, (0 split)
landsz  < 2811.5 to the left,  agree=0.747, adj=0.043, (0 split)
Node number 18: 23 observations
predicted class=625000  expected loss=0.8695652  P(node) =0.1095238
class counts:     0     0     0     1     0     0     1     0     1     2     0     1     2     2     1     3     1     1     0     1     0     1     1     0     0     1     0     1     1     0     0     0     0     0     0     0     0     0     0     1     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0
probabilities: 0.000 0.000 0.000 0.043 0.000 0.000 0.043 0.000 0.043 0.087 0.000 0.043 0.087 0.087 0.043 0.130 0.043 0.043 0.000 0.043 0.000 0.043 0.043 0.000 0.000 0.043 0.000 0.043 0.043 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.043 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
Node number 19: 64 observations
predicted class=749000  expected loss=0.9375  P(node) =0.3047619
class counts:     0     0     1     0     0     0     0     1     0     0     1     0     1     0     1     0     0     1     2     0     1     1     0     1     1     1     2     1     1     1     3     1     3     2     1     1     2     1     1     1     1     1     1     1     3     1     1     2     1     2     1     1     2     2     0     2     1     0     4     0     1     1     0     1     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0
probabilities: 0.000 0.000 0.016 0.000 0.000 0.000 0.000 0.016 0.000 0.000 0.016 0.000 0.016 0.000 0.016 0.000 0.000 0.016 0.031 0.000 0.016 0.016 0.000 0.016 0.016 0.016 0.031 0.016 0.016 0.016 0.047 0.016 0.047 0.031 0.016 0.016 0.031 0.016 0.016 0.016 0.016 0.016 0.016 0.016 0.047 0.016 0.016 0.031 0.016 0.031 0.016 0.016 0.031 0.031 0.000 0.031 0.016 0.000 0.062 0.000 0.016 0.016 0.000 0.016 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
plot(newmap, xlim = c(-158.02,-157.99), ylim = c(21.46,21.5), asp = 1)
points(housedetails$longcrd, housedetails$latcrd, col = "red", cex = .5)
plot(newmap, xlim = c(-158.3,-157.7), ylim = c(21.4,21.6), asp = 1)
points(housedetails$longcrd, housedetails$latcrd, col = "red", cex = .5)
View(housedetails)
View(housedetails)
rm(houseprice_predictor)
rm()
help(rm)
rm(list=ls())
source('~/.active-rstudio-document')
rm(list=ls())
install.packages("RPostgreSQL", type = "source")
install.packages("RPostgreSQL", type = "source")
source('~/Desktop/predictiveModeling.R')
library(RPostgreSQL)
help("RPostgreSQL")
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, dbname = "houses")
con <- dbConnect(drv, dbname = "houses")
dbListTables(con)
housedetails <- dbReadTable(con, "housedetails")
citynums <- dbReadTable(con, "citynums")
generalinput <- dbReadTable(con, "generalinput")
install.packages("party", dependencies = TRUE)
library(party)
housedetails_ctree <- ctree(origprice ~ numlevel+bathnum+bednum+yrbuilt+landsz+condtn+housesz, data=housedetails)
print(housedetails_ctree)
plot(housedetails_ctree)
plot(housedetails_ctree, type = "simple")
install.packages("rpart", dependencies = TRUE)
library(rpart)
housedetails_rpart <- rpart(origprice ~ numlevel + bathnum + bednum + yrbuilt
+ landsz + condtn + housesz, data = housedetails, method = "class")
plot(housedetails_rpart)
text(housedetails_rpart)
summary(housedetails_rpart)
install.packages("partykit")
library(partykit)
plot(as.party(housedetails_rpart))
#Prior, install Postgre App and connect to server
help("RPostgreSQL")
rm(housedetails_ctree)
printcp(housedetails+rpart)
printcp(housedetails_rpart)
plot(housedetails_rpart, uniform = TRUE, main = "Predictor Significance On House Values")
text(housedetails_rpart)
par(mai=c(0,0,0,0))
dev.off()
dev.new()
plot(housedetails_rpart, uniform = TRUE, main = "Predictor Significance On House Values")
text(housedetails_rpart)
plot(housedetails_rpart, main = "Predictor Significance On House Values")
rpart.cptable <- housedetails_part.rpart$cptable
rpart.cptable <- housedetails_rpart$cptable
rpart.cptable
opt <- which.min(housedetails_rpart$cptable[, "xerror"])
prunehousedetails <housedetails_rpart$cptable[opt, "prunehousedetails"]
prunehousedetails <- housedetails_rpart$cptable[opt, "prunehousedetails"]
prunehd <- housedetails_rpart$cptable[opt, "prunehd"]
cp <- housedetails_rpart$cptable[opt, "cp"]
cp <- housedetails_rpart$cptable[opt, "CP"]
rm(cp)
prunehd <- housedetails_rpart$cptable[opt, "PRUNEHD"]
hd <- housedetails_rpart$cptable[opt, "HD"]
cp <- housedetails_rpart$cptable[opt, "CP"]
rm(rpart.cptable)
housedetails_cptable <- housedetails_rpart$cptable
housedetails_prune <- prune(housedetails_rpart, cp = cp)
text(housedetails_rpart)
install.packages("partykit")
install.packages("partykit")
plot(as.party(housedetails_rpart))
hd.prd$supportRpartPct <- predict(housedetails_rpart, hd.prd)[,2] # Get the predictions for the model
View(housedetails)
View(housedetails)
help(lm)
help(predict)
housevalues_predict <- predict(housedetails_rpart, housedetails) [,18]
view(housevalues_predict)
View(housevalues_predict)
rm(housevalues_predict)
housevalues_predict <- predict(origprice ~ bathnum + bednum + numlevel + yrbuilt + landsz + condtn + housesz, housedetails) [,18]
housevalues_lm <- lm(origprice ~ bathnum + bednum + numlevel + yrbuilt + landsz + condtn + housesz, housedetails, data = housedetails)
housevalues_lm <- lm(origprice ~ bathnum + bednum + numlevel + yrbuilt + landsz + condtn + housesz, data = housedetails)
housepredictors_df <- data.frame(housedetails[,8:9,11:15])
View(housepredictors_df)
View(housepredictors_df)
housepredictors_df <- data.frame(bathnum$housedetails, bednum$housedetails, numlevel$housedetails, yrbuilt$housedetails, landsz$housedetails, condtn$housedetails, housesz$housedetails)
housepredictors_df <- data.frame(housedetails[,8:9,11:15])
housepredictors_df <- data.frame(housedetails$bathnum, housedetails$bednum, housedetails$numlevel, housedetails$yrbuilt, housedetails$landsz, housedetails$condtn, housedetails$housesz)
View(housepredictors_df)
View(housepredictors_df)
houseprediction_predict <- predict(housevalues_lm, newdata = housepredictors_df, interval = 'prediction')
housevalues_lm <- lm(housedetails$origprice ~ housedetails$bathnum + housedetails$bednum + housedetails$numlevel + housedetails$yrbuilt + housedetails$landsz + housedetails$condtn + housedetails$housesz, data = housedetails)
houseprediction_predict <- predict(housevalues_lm, newdata = housepredictors_df, interval = 'prediction')
houseprediction_confident <- predict(housevalues_lm, newdata = housepredictors_df, interval = 'confidence')
View(houseprediction_confident)
View(houseprediction_confident)
View(houseprediction_confident)
View(houseprediction_confident)
View(houseprediction_predict)
View(houseprediction_predict)
houseprediction_predictcomplete <- [houseprediction_predict(:,1:3) housedetails$origprice houseprediction_predict(:,3:4)]
houseprediction_predictcomplete <- houseprediction_predict(:,1:3) housedetails$origprice houseprediction_predict(:,3:4)
houseprediction_predictcomplete <- houseprediction_predict[,1:3] housedetails$origprice houseprediction_predict[,3:4]
houseprediction_predictcomplete <- houseprediction_predict[1:3] housedetails$origprice houseprediction_predict[,3:4]
housedetails$origprice <- housedetails_predict.vector
housedetails_predict$origprice <- as.factor(housedetails$origprice)
houseprediction_predict$origprice <- as.factor(housedetails$origprice)
View(houseprediction_predict)
View(houseprediction_predict)
houseprediction_predict <- predict(housevalues_lm, newdata = housepredictors_df, interval = 'prediction')
View(houseprediction_predict)
View(housedetails)
View(housedetails)
origprice <- housedetails$origprice
housedetails$origprice <- origprice
houseprediction_predict$origprice <- origprice
houseprediction_predict <- predict(housevalues_lm, newdata = housepredictors_df, interval = 'prediction')
houseprediction_predict$size      <- 0
houseprediction_predict <- predict(housevalues_lm, newdata = housepredictors_df, interval = 'prediction')
houseprediction_predict <- data.frame(houseprediction_predict)
houseprediction_predict$origprice <- origprice
houseprediction_confident <- data.frame(houseprediction_confident)
houseprediction_confident$origprice <- origprice
View(houseprediction_confident)
View(houseprediction_confident)
View(houseprediction_predict)
View(houseprediction_predict)
install.packages("devtools")
setwd("~/Desktop/RESEARCH/git")
shiny::runApp('shiny1')
shiny::runApp('shiny1')
shiny::runApp('shiny1')
View(citynums)
View(citynums)
shiny::runApp('shiny1')
shiny::runApp('shiny1')
shiny::runApp('shiny1')
shiny::runApp('shiny1')
shiny::runApp('shiny1')
shiny::runApp('shiny1')
l
shiny::runApp('shiny1')
shiny::runApp('shiny1')
shiny::runApp('shiny1')
shiny::runApp('shiny1')
shiny::runApp('shiny1')
View(housedetails)
View(housedetails)
shiny::runApp('shiny1')
shiny::runApp('shiny1')
shiny::runApp('shiny1')
shiny::runApp('shiny1')
shiny::runApp('shiny1')
shiny::runApp('shiny1')
shiny::runApp('shiny1')
shiny::runApp('shiny1')
shiny::runApp('shiny1')
shiny::runApp('shiny1')
shiny::runApp('shiny1')
shiny::runApp('shiny1')
shiny::runApp('shiny1')
shiny::runApp('shiny1')
shiny::runApp('shiny1')
shiny::runApp('shiny1')
shiny::runApp('shiny1')
shiny::runApp('shiny1')
shiny::runApp('shiny1')
shiny::runApp('shiny1')
shiny::runApp('shiny1')
shiny::runApp('shiny1')
shiny::runApp('shiny1')
shiny::runApp('shiny1')
shiny::runApp('shiny1')
shiny::runApp('shiny1')
